/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.openkruise.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.openkruise.client.models.KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopExec;
import io.openkruise.client.models.KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopHttpGet;
import io.openkruise.client.models.KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopTcpSocket;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * container probe spec
 */
@ApiModel(description = "container probe spec")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1NodePodProbeSpecProbe {
  @SerializedName("exec")
  private KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopExec exec = null;

  @SerializedName("failureThreshold")
  private Integer failureThreshold = null;

  @SerializedName("httpGet")
  private KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopHttpGet httpGet = null;

  @SerializedName("initialDelaySeconds")
  private Integer initialDelaySeconds = null;

  @SerializedName("periodSeconds")
  private Integer periodSeconds = null;

  @SerializedName("successThreshold")
  private Integer successThreshold = null;

  @SerializedName("tcpSocket")
  private KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopTcpSocket tcpSocket = null;

  @SerializedName("terminationGracePeriodSeconds")
  private Long terminationGracePeriodSeconds = null;

  @SerializedName("timeoutSeconds")
  private Integer timeoutSeconds = null;

  public KruiseAppsV1alpha1NodePodProbeSpecProbe exec(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopExec exec) {
    this.exec = exec;
    return this;
  }

   /**
   * Get exec
   * @return exec
  **/
  @ApiModelProperty(value = "")
  public KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopExec getExec() {
    return exec;
  }

  public void setExec(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopExec exec) {
    this.exec = exec;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe failureThreshold(Integer failureThreshold) {
    this.failureThreshold = failureThreshold;
    return this;
  }

   /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   * @return failureThreshold
  **/
  @ApiModelProperty(value = "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.")
  public Integer getFailureThreshold() {
    return failureThreshold;
  }

  public void setFailureThreshold(Integer failureThreshold) {
    this.failureThreshold = failureThreshold;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe httpGet(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopHttpGet httpGet) {
    this.httpGet = httpGet;
    return this;
  }

   /**
   * Get httpGet
   * @return httpGet
  **/
  @ApiModelProperty(value = "")
  public KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopHttpGet getHttpGet() {
    return httpGet;
  }

  public void setHttpGet(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopHttpGet httpGet) {
    this.httpGet = httpGet;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe initialDelaySeconds(Integer initialDelaySeconds) {
    this.initialDelaySeconds = initialDelaySeconds;
    return this;
  }

   /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @return initialDelaySeconds
  **/
  @ApiModelProperty(value = "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes")
  public Integer getInitialDelaySeconds() {
    return initialDelaySeconds;
  }

  public void setInitialDelaySeconds(Integer initialDelaySeconds) {
    this.initialDelaySeconds = initialDelaySeconds;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe periodSeconds(Integer periodSeconds) {
    this.periodSeconds = periodSeconds;
    return this;
  }

   /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   * @return periodSeconds
  **/
  @ApiModelProperty(value = "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.")
  public Integer getPeriodSeconds() {
    return periodSeconds;
  }

  public void setPeriodSeconds(Integer periodSeconds) {
    this.periodSeconds = periodSeconds;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe successThreshold(Integer successThreshold) {
    this.successThreshold = successThreshold;
    return this;
  }

   /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @return successThreshold
  **/
  @ApiModelProperty(value = "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.")
  public Integer getSuccessThreshold() {
    return successThreshold;
  }

  public void setSuccessThreshold(Integer successThreshold) {
    this.successThreshold = successThreshold;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe tcpSocket(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopTcpSocket tcpSocket) {
    this.tcpSocket = tcpSocket;
    return this;
  }

   /**
   * Get tcpSocket
   * @return tcpSocket
  **/
  @ApiModelProperty(value = "")
  public KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopTcpSocket getTcpSocket() {
    return tcpSocket;
  }

  public void setTcpSocket(KruiseAppsV1alpha1ContainerRecreateRequestSpecPreStopTcpSocket tcpSocket) {
    this.tcpSocket = tcpSocket;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe terminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {
    this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
    return this;
  }

   /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod&#39;s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
   * @return terminationGracePeriodSeconds
  **/
  @ApiModelProperty(value = "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.")
  public Long getTerminationGracePeriodSeconds() {
    return terminationGracePeriodSeconds;
  }

  public void setTerminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {
    this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
  }

  public KruiseAppsV1alpha1NodePodProbeSpecProbe timeoutSeconds(Integer timeoutSeconds) {
    this.timeoutSeconds = timeoutSeconds;
    return this;
  }

   /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @return timeoutSeconds
  **/
  @ApiModelProperty(value = "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes")
  public Integer getTimeoutSeconds() {
    return timeoutSeconds;
  }

  public void setTimeoutSeconds(Integer timeoutSeconds) {
    this.timeoutSeconds = timeoutSeconds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KruiseAppsV1alpha1NodePodProbeSpecProbe ioKruiseAppsV1alpha1NodePodProbeSpecProbe = (KruiseAppsV1alpha1NodePodProbeSpecProbe) o;
    return Objects.equals(this.exec, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.exec) &&
        Objects.equals(this.failureThreshold, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.failureThreshold) &&
        Objects.equals(this.httpGet, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.httpGet) &&
        Objects.equals(this.initialDelaySeconds, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.initialDelaySeconds) &&
        Objects.equals(this.periodSeconds, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.periodSeconds) &&
        Objects.equals(this.successThreshold, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.successThreshold) &&
        Objects.equals(this.tcpSocket, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.tcpSocket) &&
        Objects.equals(this.terminationGracePeriodSeconds, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.terminationGracePeriodSeconds) &&
        Objects.equals(this.timeoutSeconds, ioKruiseAppsV1alpha1NodePodProbeSpecProbe.timeoutSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exec, failureThreshold, httpGet, initialDelaySeconds, periodSeconds, successThreshold, tcpSocket, terminationGracePeriodSeconds, timeoutSeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KruiseAppsV1alpha1NodePodProbeSpecProbe {\n");
    
    sb.append("    exec: ").append(toIndentedString(exec)).append("\n");
    sb.append("    failureThreshold: ").append(toIndentedString(failureThreshold)).append("\n");
    sb.append("    httpGet: ").append(toIndentedString(httpGet)).append("\n");
    sb.append("    initialDelaySeconds: ").append(toIndentedString(initialDelaySeconds)).append("\n");
    sb.append("    periodSeconds: ").append(toIndentedString(periodSeconds)).append("\n");
    sb.append("    successThreshold: ").append(toIndentedString(successThreshold)).append("\n");
    sb.append("    tcpSocket: ").append(toIndentedString(tcpSocket)).append("\n");
    sb.append("    terminationGracePeriodSeconds: ").append(toIndentedString(terminationGracePeriodSeconds)).append("\n");
    sb.append("    timeoutSeconds: ").append(toIndentedString(timeoutSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

