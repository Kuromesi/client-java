/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.openkruise.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.models.V1NodeSelectorTerm;
import io.kubernetes.client.models.V1Toleration;
import io.kubernetes.client.custom.IntOrString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Subset defines the detail of a subset.
 */
@ApiModel(description = "Subset defines the detail of a subset.")

public class KruiseAppsV1alpha1Subset {
  @SerializedName("name")
  private String name = null;

  @SerializedName("nodeSelectorTerm")
  private V1NodeSelectorTerm nodeSelectorTerm = null;

  @SerializedName("replicas")
  private IntOrString replicas = null;

  @SerializedName("tolerations")
  private List<V1Toleration> tolerations = null;

  public KruiseAppsV1alpha1Subset name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Indicates subset name as a DNS_LABEL, which will be used to generate subset workload name prefix in the format &#39;&lt;deployment-name&gt;-&lt;subset-name&gt;-&#39;. Name should be unique between all of the subsets under one UnitedDeployment.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Indicates subset name as a DNS_LABEL, which will be used to generate subset workload name prefix in the format '<deployment-name>-<subset-name>-'. Name should be unique between all of the subsets under one UnitedDeployment.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public KruiseAppsV1alpha1Subset nodeSelectorTerm(V1NodeSelectorTerm nodeSelectorTerm) {
    this.nodeSelectorTerm = nodeSelectorTerm;
    return this;
  }

   /**
   * Indicates the node selector to form the subset. Depending on the node selector, pods provisioned could be distributed across multiple groups of nodes. A subset&#39;s nodeSelectorTerm is not allowed to be updated.
   * @return nodeSelectorTerm
  **/
  @ApiModelProperty(value = "Indicates the node selector to form the subset. Depending on the node selector, pods provisioned could be distributed across multiple groups of nodes. A subset's nodeSelectorTerm is not allowed to be updated.")
  public V1NodeSelectorTerm getNodeSelectorTerm() {
    return nodeSelectorTerm;
  }

  public void setNodeSelectorTerm(V1NodeSelectorTerm nodeSelectorTerm) {
    this.nodeSelectorTerm = nodeSelectorTerm;
  }

  public KruiseAppsV1alpha1Subset replicas(IntOrString replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Indicates the number of the pod to be created under this subset. Replicas could also be percentage like &#39;10%&#39;, which means 10% of UnitedDeployment replicas of pods will be distributed under this subset. If nil, the number of replicas in this subset is determined by controller. Controller will try to keep all the subsets with nil replicas have average pods.
   * @return replicas
  **/
  @ApiModelProperty(value = "Indicates the number of the pod to be created under this subset. Replicas could also be percentage like '10%', which means 10% of UnitedDeployment replicas of pods will be distributed under this subset. If nil, the number of replicas in this subset is determined by controller. Controller will try to keep all the subsets with nil replicas have average pods.")
  public IntOrString getReplicas() {
    return replicas;
  }

  public void setReplicas(IntOrString replicas) {
    this.replicas = replicas;
  }

  public KruiseAppsV1alpha1Subset tolerations(List<V1Toleration> tolerations) {
    this.tolerations = tolerations;
    return this;
  }

  public KruiseAppsV1alpha1Subset addTolerationsItem(V1Toleration tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<V1Toleration>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Indicates the tolerations the pods under this subset have. A subset&#39;s tolerations is not allowed to be updated.
   * @return tolerations
  **/
  @ApiModelProperty(value = "Indicates the tolerations the pods under this subset have. A subset's tolerations is not allowed to be updated.")
  public List<V1Toleration> getTolerations() {
    return tolerations;
  }

  public void setTolerations(List<V1Toleration> tolerations) {
    this.tolerations = tolerations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KruiseAppsV1alpha1Subset kruiseAppsV1alpha1Subset = (KruiseAppsV1alpha1Subset) o;
    return Objects.equals(this.name, kruiseAppsV1alpha1Subset.name) &&
        Objects.equals(this.nodeSelectorTerm, kruiseAppsV1alpha1Subset.nodeSelectorTerm) &&
        Objects.equals(this.replicas, kruiseAppsV1alpha1Subset.replicas) &&
        Objects.equals(this.tolerations, kruiseAppsV1alpha1Subset.tolerations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, nodeSelectorTerm, replicas, tolerations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KruiseAppsV1alpha1Subset {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeSelectorTerm: ").append(toIndentedString(nodeSelectorTerm)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

