/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.openkruise.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.custom.IntOrString;
import io.openkruise.client.models.KruiseAppsV1alpha1CompletionPolicy;
import io.openkruise.client.models.KruiseAppsV1alpha1ImagePullJobNodeSelector;
import io.openkruise.client.models.KruiseAppsV1alpha1ImagePullJobPodSelector;
import io.openkruise.client.models.KruiseAppsV1alpha1PullPolicy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ImagePullJobSpec defines the desired state of ImagePullJob
 */
@ApiModel(description = "ImagePullJobSpec defines the desired state of ImagePullJob")

public class KruiseAppsV1alpha1ImagePullJobSpec {
  @SerializedName("completionPolicy")
  private KruiseAppsV1alpha1CompletionPolicy completionPolicy = null;

  @SerializedName("image")
  private String image = "";

  @SerializedName("parallelism")
  private IntOrString parallelism = null;

  @SerializedName("podSelector")
  private KruiseAppsV1alpha1ImagePullJobPodSelector podSelector = null;

  @SerializedName("pullPolicy")
  private KruiseAppsV1alpha1PullPolicy pullPolicy = null;

  @SerializedName("pullSecrets")
  private List<String> pullSecrets = null;

  @SerializedName("selector")
  private KruiseAppsV1alpha1ImagePullJobNodeSelector selector = null;

  public KruiseAppsV1alpha1ImagePullJobSpec completionPolicy(KruiseAppsV1alpha1CompletionPolicy completionPolicy) {
    this.completionPolicy = completionPolicy;
    return this;
  }

   /**
   * CompletionPolicy indicates the completion policy of the job. Default is Always CompletionPolicyType.
   * @return completionPolicy
  **/
  @ApiModelProperty(required = true, value = "CompletionPolicy indicates the completion policy of the job. Default is Always CompletionPolicyType.")
  public KruiseAppsV1alpha1CompletionPolicy getCompletionPolicy() {
    return completionPolicy;
  }

  public void setCompletionPolicy(KruiseAppsV1alpha1CompletionPolicy completionPolicy) {
    this.completionPolicy = completionPolicy;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Image is the image to be pulled by the job
   * @return image
  **/
  @ApiModelProperty(required = true, value = "Image is the image to be pulled by the job")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec parallelism(IntOrString parallelism) {
    this.parallelism = parallelism;
    return this;
  }

   /**
   * Parallelism is the requested parallelism, it can be set to any non-negative value. If it is unspecified, it defaults to 1. If it is specified as 0, then the Job is effectively paused until it is increased.
   * @return parallelism
  **/
  @ApiModelProperty(value = "Parallelism is the requested parallelism, it can be set to any non-negative value. If it is unspecified, it defaults to 1. If it is specified as 0, then the Job is effectively paused until it is increased.")
  public IntOrString getParallelism() {
    return parallelism;
  }

  public void setParallelism(IntOrString parallelism) {
    this.parallelism = parallelism;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec podSelector(KruiseAppsV1alpha1ImagePullJobPodSelector podSelector) {
    this.podSelector = podSelector;
    return this;
  }

   /**
   * PodSelector is a query over pods that should pull image on nodes of these pods. Mutually exclusive with Selector.
   * @return podSelector
  **/
  @ApiModelProperty(value = "PodSelector is a query over pods that should pull image on nodes of these pods. Mutually exclusive with Selector.")
  public KruiseAppsV1alpha1ImagePullJobPodSelector getPodSelector() {
    return podSelector;
  }

  public void setPodSelector(KruiseAppsV1alpha1ImagePullJobPodSelector podSelector) {
    this.podSelector = podSelector;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec pullPolicy(KruiseAppsV1alpha1PullPolicy pullPolicy) {
    this.pullPolicy = pullPolicy;
    return this;
  }

   /**
   * PullPolicy is an optional field to set parameters of the pulling task. If not specified, the system will use the default values.
   * @return pullPolicy
  **/
  @ApiModelProperty(value = "PullPolicy is an optional field to set parameters of the pulling task. If not specified, the system will use the default values.")
  public KruiseAppsV1alpha1PullPolicy getPullPolicy() {
    return pullPolicy;
  }

  public void setPullPolicy(KruiseAppsV1alpha1PullPolicy pullPolicy) {
    this.pullPolicy = pullPolicy;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec pullSecrets(List<String> pullSecrets) {
    this.pullSecrets = pullSecrets;
    return this;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec addPullSecretsItem(String pullSecretsItem) {
    if (this.pullSecrets == null) {
      this.pullSecrets = new ArrayList<String>();
    }
    this.pullSecrets.add(pullSecretsItem);
    return this;
  }

   /**
   * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling the image. If specified, these secrets will be passed to individual puller implementations for them to use.  For example, in the case of docker, only DockerConfig type secrets are honored.
   * @return pullSecrets
  **/
  @ApiModelProperty(value = "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling the image. If specified, these secrets will be passed to individual puller implementations for them to use.  For example, in the case of docker, only DockerConfig type secrets are honored.")
  public List<String> getPullSecrets() {
    return pullSecrets;
  }

  public void setPullSecrets(List<String> pullSecrets) {
    this.pullSecrets = pullSecrets;
  }

  public KruiseAppsV1alpha1ImagePullJobSpec selector(KruiseAppsV1alpha1ImagePullJobNodeSelector selector) {
    this.selector = selector;
    return this;
  }

   /**
   * Selector is a query over nodes that should match the job. nil to match all nodes.
   * @return selector
  **/
  @ApiModelProperty(value = "Selector is a query over nodes that should match the job. nil to match all nodes.")
  public KruiseAppsV1alpha1ImagePullJobNodeSelector getSelector() {
    return selector;
  }

  public void setSelector(KruiseAppsV1alpha1ImagePullJobNodeSelector selector) {
    this.selector = selector;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KruiseAppsV1alpha1ImagePullJobSpec kruiseAppsV1alpha1ImagePullJobSpec = (KruiseAppsV1alpha1ImagePullJobSpec) o;
    return Objects.equals(this.completionPolicy, kruiseAppsV1alpha1ImagePullJobSpec.completionPolicy) &&
        Objects.equals(this.image, kruiseAppsV1alpha1ImagePullJobSpec.image) &&
        Objects.equals(this.parallelism, kruiseAppsV1alpha1ImagePullJobSpec.parallelism) &&
        Objects.equals(this.podSelector, kruiseAppsV1alpha1ImagePullJobSpec.podSelector) &&
        Objects.equals(this.pullPolicy, kruiseAppsV1alpha1ImagePullJobSpec.pullPolicy) &&
        Objects.equals(this.pullSecrets, kruiseAppsV1alpha1ImagePullJobSpec.pullSecrets) &&
        Objects.equals(this.selector, kruiseAppsV1alpha1ImagePullJobSpec.selector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionPolicy, image, parallelism, podSelector, pullPolicy, pullSecrets, selector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KruiseAppsV1alpha1ImagePullJobSpec {\n");
    
    sb.append("    completionPolicy: ").append(toIndentedString(completionPolicy)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
    sb.append("    podSelector: ").append(toIndentedString(podSelector)).append("\n");
    sb.append("    pullPolicy: ").append(toIndentedString(pullPolicy)).append("\n");
    sb.append("    pullSecrets: ").append(toIndentedString(pullSecrets)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

